{"version":3,"file":"is.js","sources":["../src/core.mjs","../src/static/array.mjs","../src/static/object.mjs","../src/static/representation.mjs","../src/static/type.mjs","../src/static/typeOf.mjs","../src/proto/array.mjs","../src/proto/boolean.mjs","../src/proto/function.mjs","../src/proto/in.mjs","../src/proto/nan.mjs","../src/proto/null.mjs","../src/proto/number.mjs","../src/proto/object.mjs","../src/proto/oftype.mjs","../src/proto/regexp.mjs","../src/proto/representation.mjs","../src/proto/string.mjs","../src/proto/symbol.mjs","../src/proto/undefined.mjs"],"sourcesContent":["/**\n * `is.js`\n *\n * @constructor\n * @param {*} actual - something to check\n * @returns {is} is instance\n * @version 1.0.0\n */\nfunction is(actual) {\n  if (!(this instanceof is)) {\n    return new is(actual);\n  }\n\n  /**\n   * The `actual` property is the parameter passed to `is`\n   *\n   * @memberof is\n   * @instance\n   * @since 1.0.0\n   */\n  this.actual = actual;\n\n  /**\n   * The `not` property has the negated version of `is.prototype`\n   *\n   * @example\n   * const x = '';\n   * is(x).string()                   // true\n   * is(x).not.string()               // false\n   * is(x).not.string({empty: false}) // true\n   *\n   * @type {Omit<is, 'not' | 'actual'>}\n   * @memberof is\n   * @instance\n   * @since 1.0.0\n   */\n  this.not = {};\n\n  for (const func of Object.getOwnPropertyNames(\n    Object.getPrototypeOf(this)\n  ).filter(i => i != 'constructor')) {\n    this.not[func] = (object, options) => !this[func](object, options);\n  }\n}\n\n/**\n * @callback ExtendCallBack\n * @param {*} [options] - Optional options parameter\n * @param {*} [config] - Optional config parameter\n * @returns {boolean}\n */\n\n/**\n * @typedef {Object.<string, ExtendCallBack>} PluginFunctionMap\n */\n\n/**\n * Extend `is.prototype`\n *\n * @param { PluginFunctionMap } object - plugins object\n *\n * @example\n * is.extend({\n *   uppercase: function () {\n *     return this.actual.split('').every(x => x.match(/[A-Z]/));\n *   }\n * });\n *\n * is('WORD').uppercase()     // true\n * is('Word').uppercase()     // false\n * is('Word').not.uppercase() // true\n *\n * @memberof is\n * @static\n * @since 1.0.0\n */\nis.extend = function (object) {\n  for (const method in object) {\n    if (Object.prototype.hasOwnProperty.call(object, method)) {\n      is.prototype[method] = object[method];\n    }\n  }\n};\n\nexport default is;\n","import is from '../core.mjs';\n\n/**\n * Validates with type predicate if `object` is array\n *\n * @param {*} object - The object to check\n * @returns {object is any[]}\n *\n * @example\n * const x: unknown = ...;\n *\n * if (is.array(x)) {\n *   // x here is any[]\n * }\n *\n * @memberof is\n * @static\n * @since 1.0.0\n */\nis.array = function (object) {\n  return Array.isArray\n    ? Array.isArray(object)\n    : is.representation(object, '[object Array]');\n};\n\nexport default is;\n","import is from '../core.mjs';\n\n/**\n * Validates if `object` is a plain object\n *\n * @param {*} object - The object to check\n * @returns {boolean}\n *\n * @example\n * is.object({ a: 1 })        // true\n * is.object(new Something()) // false`\n *\n * @memberOf is\n * @static\n * @since 1.0.0\n */\nis.object = function (object) {\n  return (\n    typeof object === 'object' &&\n    object !== null &&\n    is.representation(object, '[object Object]')\n  );\n};\n\nexport default is;\n","import is from '../core.mjs';\n\n/**\n * @typedef { (\"[object Type]\") } Representation\n */\n\n/**\n * Get the string representation of `object`\n * and optionaly compare it against `expected`\n *\n * @overload Get\n * @param {*} object - The object to check\n * @returns {Representation}\n * @example\n * is.representation(null) // '[object Null]'\n *\n * @overload Compare\n * @param {*} object - The object to check\n * @param {Representation} expected - e.g `\"[object Boolean]\"`\n * @returns {boolean}\n * @example\n * is.representation(true, '[object Boolean]') // true\n *\n * @memberOf is\n * @static\n * @since 1.0.0\n */\nis.representation = function (object, expected) {\n  const toString = Object.prototype.toString.call(object);\n\n  return typeof expected !== 'undefined' ? toString === expected : toString;\n};\n\nexport default is;\n","import is from '../core.mjs';\n\n/**\n * @typedef {(\n * 'string'\n * | 'number'\n * | 'boolean'\n * | 'array'\n * | 'object'\n * | 'function'\n * | 'symbol'\n * | 'null'\n * | 'undefined'\n * | 'regexp'\n * )} Specific\n */\n\n/**\n * @typedef {{\n * string: string;\n * number: number;\n * boolean: boolean;\n * array: any[];\n * object: object;\n * function: Function;\n * symbol: Symbol;\n * null: null;\n * undefined: undefined;\n * regexp: RegExp;\n * }} SpecificMap\n */\n\n/**\n * **How it works?**\n * > If only `object` parameter is provided, return it's specific type\n *\n * ```\n * is.type([] | \"[]\");      // 'array'\n * is.type({} | \"{}\");      // 'object'\n * is.type(1 | \"2\");        // 'number'\n * is.type(true | \"false\"); // 'boolean'\n * is.type(\"something\");    // 'string'\n * is.type(/[0-9]/g);       // 'regexp'\n * ```\n *\n * > If `object` and `expected` are provides, returns boolean with a type predicate\n *\n * ```\n * const arg = process.argv[2];\n *\n * if ( is.type(arg, 'array') ) {\n *   // true and arg is any[]\n * }\n *\n * if ( is.type(arg, 'symbol') ) {\n *   // true and arg is symbol\n * }\n * ```\n *\n * > But wait, actually ( \"{}\", \"[]\", \"2\" ) are strings\n *\n * ```\n * const arg = '{a: 1}'; // 'string'\n *\n * // If `object` is of type 'string'\n * // with `expected` set to 'string'\n * // returns true, regardless it's content\n * is.type(arg, 'string') // true, with 'string' type predicate\n *\n * // via `is.prototype.str`\n * is(arg).string() // true, but no type predicate\n * ```\n *\n * **What the specific type is**\n * > For cli inputs and types wrapped in a string, try to extract and define it's type\n *\n * @template {Specific} Expected\n *\n * @overload Get\n * @param {*} object - The object whose type is to be checked\n * @returns {Specific | 'unknown'}\n *\n * @overload Compare with type predicate\n * @param {*} object - The object whose type to be checked\n * @param {Specific} expected - The `object` expected type\n * @returns {object is SpecificMap[Expected]}\n *\n * @memberOf is\n * @static\n * @since 1.0.0\n */\nis.type = function (object, expected) {\n  if (typeof expected === 'string') {\n    if (expected === 'string' && typeof object === 'string') {\n      return true;\n    }\n\n    return extract(object) === expected;\n  }\n\n  return extract(object);\n\n  function extract(object) {\n    const type = is(object);\n\n    if (type.number({ string: true })) {\n      return 'number';\n    } else if (type.boolean({ string: true })) {\n      return 'boolean';\n    } else if (type.array({ string: true })) {\n      return 'array';\n    } else if (type.object({ string: true })) {\n      return 'object';\n    } else if (type.function()) {\n      return 'function';\n    } else if (type.symbol()) {\n      return 'symbol';\n    } else if (type.regexp()) {\n      return 'regexp';\n    } else if (type.null({ string: true })) {\n      return 'null';\n    } else if (type.undefined({ string: true })) {\n      return 'undefined';\n    } else if (type.string()) {\n      return 'string';\n    } else {\n      return 'unknown';\n    }\n  }\n};\n\nexport default is;\n","import is from '../core.mjs';\n\n/**\n * @typedef {(\n * 'bigint'\n * | 'boolean'\n * | 'function'\n * | 'number'\n * | 'object'\n * | 'string'\n * | 'symbol'\n * | 'undefined'\n * )} Typeof\n */\n\n/**\n * @typedef {{\n * bigint: bigint;\n * boolean: boolean;\n * function: Function;\n * number: number;\n * object: object;\n * string: string;\n * symbol: symbol;\n * undefined: undefined;\n * }} TypeofMap\n */\n\n/**\n * Check with type predicate if `object` is typeof `expected`\n *\n * @template {Typeof} Expected\n *\n * @param {*} object - The object whose type to be checked\n * @param {Expected} expected - The `object` expected type\n * @returns {object is TypeofMap[Expected]}\n *\n * @example\n * is.typeOf(['a'], 'object')  // true\n * is.typeOf({a: 0}, 'object') // true\n * is.typeOf(null, 'object')   // true\n * is.typeOf('xyz', 'string')  // true\n * is.typeOf(0, 'number')      // true\n * is.typeOf(false, 'boolean') // true\n *\n * @memberOf is\n * @static\n * @since 1.0.0\n */\nis.typeOf = function (object, expected) {\n  return typeof object === expected;\n};\n\nexport default is;\n","import is from '../core.mjs';\nimport json5 from 'json5';\n\n/**\n * Checks if `is.prototype.actual` is array,\n * with optional behavior for string array\n *\n * @param {object} [options] - Optional configration object\n * @param {boolean} [options.string] - If true, also considers\n * the string array `\"[...]\"` as valid array matches\n * @returns {boolean}\n *\n * @example\n * is(['A']).array() // true\n * is('[1]').array({string: true}) // true\n *\n * @memberof is\n * @instance\n * @since 1.0.0\n */\nis.prototype.array = function (options) {\n  try {\n    const parsed =\n      options?.string === true && this.string()\n        ? json5.parse(this.actual)\n        : this.actual;\n\n    return is.array(parsed);\n  } catch {\n    return false;\n  }\n};\n\nexport default is;\n","import is from '../core.mjs';\n\n/**\n * Checks if `is.prototype.actual` is boolean (true | false)\n * with optional behavior for string boolean\n *\n * @param {Object} [options] - Optional configration object\n * @param {boolean} [options.string] - If true, also considers\n * the strings 'true' and 'false' as valid boolean matches\n * @returns {boolean}\n *\n * @example\n * is(true).boolean() // true\n * is('false').boolean({string: true}) // true\n *\n * @memberof is\n * @instance\n * @since 1.0.0\n */\nis.prototype.boolean = function (options) {\n  const range = [true, false];\n\n  if (options?.string === true) {\n    range.push('true', 'false');\n  }\n\n  return range.some(i => i === this.actual);\n};\n\nexport default is;\n","import is from '../core.mjs';\n\n/**\n * Checks if `is.prototype.actual` is function\n *\n * @returns {boolean}\n *\n * @example\n * is(() => {}).function() // true\n *\n * @memberof is\n * @instance\n * @since 1.0.0\n */\nis.prototype.function = function () {\n  return (\n    typeof this.actual === 'function' &&\n    this.representation('[object Function]')\n  );\n};\n\nexport default is;\n","import is from '../core.mjs';\n\n/**\n * Determines if `is.prototype.actual` in `object` or `array`,\n * with optional strict check for ownProperties\n *\n * @param {*} object - Object to search in\n * @param {object} [options] - Optional configration object\n * @param {'all' | 'own'} [options.mode] - If 'own' check only the object direct properties\n * (ownProperties) not inherited, defaults to 'all'\n * @returns {boolean}\n *\n * @example\n * const a = {one: 1};\n * const b = Object.create(a);\n * b.tow = 2;\n *\n * is('a').in([1, 'a', true]) // true\n * is('one').in(b) // true\n * is('tow').in(b) // true\n * is('one').in(b, {mode: 'own'}) // false\n * is('tow').in(b, {mode: 'own'}) // true\n *\n * @memberof is\n * @instance\n * @since 1.0.0\n */\nis.prototype.in = function (object, options = { mode: 'all' }) {\n  if (is.array(object)) {\n    return object.includes(this.actual);\n  } else if (is.object(object)) {\n    if (options.mode === 'own') {\n      return Object.prototype.hasOwnProperty.call(object, this.actual);\n    }\n    return this.actual in object;\n  } else {\n    return false;\n  }\n};\n\nexport default is;\n","import is from '../core.mjs';\n\n/**\n * Checks if `is.prototype.actual` is NaN, by default coerces the input to a number first\n * with optional behavior for skips coercion (exact NaN check)\n *\n * @param {object} [options] - Optional configration object\n * @param {boolean} [options.strict] - If true, check `is.prototype.actual` is exactly `NaN`\n * without coerces to a number before checking\n * @returns {boolean}\n *\n * @example\n * is('a').nan() // true\n * is(NaN).nan({strict: true}) // true\n * is('a').nan({strict: true}) // false\n *\n * @memberof is\n * @instance\n * @since 1.0.0\n */\nis.prototype.nan = function (options) {\n  return options?.strict === true\n    ? Number.isNaN(this.actual)\n    : isNaN(this.actual);\n};\n\nexport default is;\n","import is from '../core.mjs';\n\n/**\n * Checks if `is.prototype.actual` is null,\n * with optional behavior for string null\n *\n * @param {object} [options] - Optional configration object\n * @param {boolean} [options.string] - If true, also considers the string null \"null\"\n * as valid null matches\n *\n * @returns {boolean}\n *\n * @example\n * is(null).null() // true\n * is('null').null({string: true}) // true\n *\n * @memberof is\n * @instance\n * @since 1.0.0\n */\nis.prototype.null = function (options) {\n  const native = () => typeof this.actual === 'object' && this.actual === null;\n  const string = () => this.string({ empty: false }) && this.actual === 'null';\n  return options?.string === true ? native() || string() : native();\n}\n\nexport default is;\n","import is from '../core.mjs';\n\n/**\n * Checks if `is.prototype.actual` is number,\n * with optional behavior for string number\n *\n * @param {object} [options] - Optional configuration object\n * @param {boolean} [options.string] - If true considers string values that can be\n * converted to a number as valid otherwise checks for number type\n *\n * @returns {boolean}\n *\n * @example\n * is(1).number() // true\n * is('2').number({string: true}) // true\n *\n * @memberof is\n * @instance\n * @since 1.0.0\n */\nis.prototype.number = function (options) {\n  try {\n    return options?.string === true\n      ? (this.actual !== '' &&  // '' => 0\n          this.not.boolean() && // true | false => 1 | 0\n          this.not.array() &&   // [] => 0\n          this.not.null() &&    // null => 0\n          this.not.nan()) ||    // string number\n          false\n      : typeof this.actual === 'number';\n  } catch {\n    return false;\n  }\n};\n\nexport default is;\n","import is from '../core.mjs';\nimport json5 from 'json5';\n\n/**\n * Checks if `is.prototype.actual` is object,\n * with optional behavior for string object\n *\n * @param {object} [options] - Optional configration object\n * @param {boolean} [options.string] - If true, also considers the string object \"{...}\"\n * as valid object matches\n *\n * @returns {boolean}\n *\n * @example\n * is({a: 1}).object() // true\n * is('{a: 1}').object({string: true}) // true\n * is('{\"a\": \"1\"}').object({string: true}) // true\n *\n * @memberof is\n * @instance\n * @since 1.0.0\n */\nis.prototype.object = function (options) {\n  try {\n    const parsed =\n      options?.string === true && this.string()\n        ? json5.parse(this.actual)\n        : this.actual;\n\n    return is.object(parsed);\n  } catch {\n    return false;\n  }\n};\n\nexport default is;\n","import is from '../core.mjs';\n\n/**\n * Check weather `is.prototype.actual` is type of `expected`,\n * with optional string type matches\n *\n * @param {Specific} expected - The expected type\n * @param {object} [options] - Optional configuration object\n * @param {boolean} [options.string] - If true considers string values that can be\n * converted to `expected` type as valid otherwise checks for `expected` type\n * @returns {boolean}\n *\n * @example\n * is('value').oftype('string') // true\n * is(true).oftype('boolean') // true\n * is('1').oftype('number', {string: true}) // true\n *\n * @memberof is\n * @instance\n * @since 1.0.0\n */\nis.prototype.oftype = function (expected, options) {\n  switch (expected) {\n    case 'string':\n      return this.string();\n    case 'boolean':\n      return options?.string === true\n        ? this.boolean({ string: true })\n        : this.boolean();\n    case 'number':\n      return options?.string === true\n        ? this.number({ string: true })\n        : this.number();\n    case 'array':\n      return options?.string === true\n        ? this.array({ string: true })\n        : this.array();\n    case 'object':\n      return options?.string === true\n        ? this.object({ string: true })\n        : this.object();\n    case 'function':\n      return this.function();\n    case 'symbol':\n      return this.symbol();\n    case 'regexp':\n      return this.regexp();\n    case 'null':\n      return options?.string === true\n        ? this.null({ string: true })\n        : this.null();\n    case 'undefined':\n      return options?.string === true\n        ? this.undefined({ string: true })\n        : this.undefined();\n    default:\n      return false;\n  }\n};\n\nexport default is;\n","import is from '../core.mjs';\n\n/**\n * Checks if `is.prototype.actual` is RegExp\n *\n * @returns {boolean}\n *\n * @example\n * is(/[a-z]/g).regexp() // true\n * is(new RegExp(/0-9/, 'g')).regexp() // true\n *\n * @memberof is\n * @instance\n * @since 1.0.0\n */\nis.prototype.regexp = function () {\n  return this.actual instanceof RegExp;\n};\n\nexport default is;\n","import is from '../core.mjs';\n\n/**\n * Returns either the string representation of `is.prototype.actual` (if expected is omitted)\n * or a boolean value indicating whether the string representations of `is.prototype.actual`\n * and `expected` are equal\n *\n * @overload Get\n * @returns {Representation}\n * @example\n * is('abc').representation() // '[object String]'\n *\n * @overload Compare\n * @param {Representation} expected - Object string representation e.g `\"[object Boolean]\"`\n * @returns {boolean}\n * @example\n * is(null).representation(\"[object Null]\") // true\n * is([12]).representation(\"[object Null]\") // false\n *\n * @memberof is\n * @instance\n * @since 1.0.0\n */\nis.prototype.representation = function (expected) {\n  return is.representation(this.actual, expected);\n};\n\nexport default is;\n","import is from '../core.mjs';\n\n/**\n * Checks if `is.prototype.actual` is string,\n * with optional behavior for empty strings\n *\n * @param {object} [options] - Optional configration object\n * @param {boolean} [options.empty] - Match empty string \"\" , defaults to `true`\n * @returns {boolean}\n *\n * @example\n * is('value').string() // true\n * is('').string({empty: false}) // false\n *\n * @memberof is\n * @instance\n * @since 1.0.0\n */\nis.prototype.string = function (options = { empty: true }) {\n  return options.empty === true\n    ? typeof this.actual === 'string'\n    : (this.actual !== '' && typeof this.actual === 'string') || false;\n};\n\nexport default is;\n","import is from '../core.mjs';\n\n/**\n * Checks if `is.prototype.actual` is symbol\n *\n * @returns {boolean}\n *\n * @example\n * is(Symbol()).symbol() // true\n *\n * @memberof is\n * @instance\n * @since 1.0.0\n */\nis.prototype.symbol = function () {\n  return (\n    typeof this.actual === 'symbol' && this.representation('[object Symbol]')\n  );\n};\n\nexport default is;\n","import is from '../core.mjs';\n\n/**\n * Checks if `is.prototype.actual` is undefined,\n * with optional behavior for string undefined\n *\n * @param {object} [options] - Optional configration object\n * @param {boolean} [options.string] - If true, also considers the string undefined \"undefined\"\n * as valid undefined matches\n * @returns {boolean}\n *\n * @example\n * is().undefined() // true\n * is(undefined).undefined() // true\n * is('undefined').undefined({string: true}) // true\n *\n * @memberof is\n * @instance\n * @since 1.0.0\n */\nis.prototype.undefined = function (options) {\n  const stringUndefined = () =>\n    this.string({ empty: false }) && this.actual === 'undefined';\n\n  return options?.string === true\n    ? typeof this.actual === 'undefined' || stringUndefined()\n    : typeof this.actual === 'undefined';\n};\n\nexport default is;\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,EAAE,CAAC,MAAM,EAAE;AACpB,EAAE,IAAI,EAAE,IAAI,YAAY,EAAE,CAAC,EAAE;AAC7B,IAAI,OAAO,IAAI,EAAE,CAAC,MAAM,CAAC;AACzB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,IAAI,CAAC,MAAM,GAAG,MAAM;;AAEtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,IAAI,CAAC,GAAG,GAAG,EAAE;;AAEf,EAAE,KAAK,MAAM,IAAI,IAAI,MAAM,CAAC,mBAAmB;AAC/C,IAAI,MAAM,CAAC,cAAc,CAAC,IAAI;AAC9B,GAAG,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,IAAI,aAAa,CAAC,EAAE;AACrC,IAAI,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE,OAAO,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,OAAO,CAAC;AACtE;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,CAAC,MAAM,GAAG,UAAU,MAAM,EAAE;AAC9B,EAAE,KAAK,MAAM,MAAM,IAAI,MAAM,EAAE;AAC/B,IAAI,IAAI,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,EAAE,MAAM,CAAC,EAAE;AAC9D,MAAM,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC;AAC3C;AACA;AACA,CAAC;;AChFD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,CAAC,KAAK,GAAG,UAAU,MAAM,EAAE;AAC7B,EAAE,OAAO,KAAK,CAAC;AACf,MAAM,KAAK,CAAC,OAAO,CAAC,MAAM;AAC1B,MAAM,EAAE,CAAC,cAAc,CAAC,MAAM,EAAE,gBAAgB,CAAC;AACjD,CAAC;;ACrBD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,CAAC,MAAM,GAAG,UAAU,MAAM,EAAE;AAC9B,EAAE;AACF,IAAI,OAAO,MAAM,KAAK,QAAQ;AAC9B,IAAI,MAAM,KAAK,IAAI;AACnB,IAAI,EAAE,CAAC,cAAc,CAAC,MAAM,EAAE,iBAAiB;AAC/C;AACA,CAAC;;ACpBD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,CAAC,cAAc,GAAG,UAAU,MAAM,EAAE,QAAQ,EAAE;AAChD,EAAE,MAAM,QAAQ,GAAG,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC;;AAEzD,EAAE,OAAO,OAAO,QAAQ,KAAK,WAAW,GAAG,QAAQ,KAAK,QAAQ,GAAG,QAAQ;AAC3E,CAAC;;AC7BD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,CAAC,IAAI,GAAG,UAAU,MAAM,EAAE,QAAQ,EAAE;AACtC,EAAE,IAAI,OAAO,QAAQ,KAAK,QAAQ,EAAE;AACpC,IAAI,IAAI,QAAQ,KAAK,QAA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"}